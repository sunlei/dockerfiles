name: sunlei/clash-mihomo
run-name: üöÄ Building docker image ${{ github.workflow }} by @${{ github.actor }}

on:
  schedule:
    - cron: "0 5 * * *"
  push:
    branches:
      - master
    paths:
      - "clash-mihomo/Dockerfile"
      - ".github/workflows/clash-mihomo.yml"
  workflow_dispatch:
    inputs:
      trigger:
        description: "Manually trigger"
        required: true
        type: choice
        options:
          - build

env:
  REGISTRY: ghcr.io

jobs:
  clash-mihomo:
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - name: Checkout repository
        # https://github.com/actions/checkout
        uses: actions/checkout@v5

      - name: Common setup
        uses: ./.github/actions/common-setup
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get latest version
        run: |
          # latest stable
          LATEST_VERSION_STABLE=$(curl -sfL "https://api.github.com/repos/MetaCubeX/mihomo/releases/latest" | jq --raw-output '.tag_name | ltrimstr("v")')
          # latest release
          LATEST_VERSION_RELEASE=$(curl -sfL "https://api.github.com/repos/MetaCubeX/mihomo/releases" | jq --raw-output '.[0].tag_name | ltrimstr("v")')

          echo "LATEST_VERSION_STABLE=$LATEST_VERSION_STABLE" >> $GITHUB_ENV
          echo "LATEST_VERSION_RELEASE=$LATEST_VERSION_RELEASE" >> $GITHUB_ENV

      - name: Build and push docker image | STABLE | ${{ env.LATEST_VERSION_STABLE }}
        uses: docker/build-push-action@v6
        with:
          context: ./${{ github.job }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: true
          build-args: |
            VERSION=${{ env.LATEST_VERSION_STABLE }}
          tags: |
            ${{ env.REGISTRY }}/${{ github.workflow }}:stable
          # tags: ${{ steps.meta.outputs.tags }}
          # labels: ${{ steps.meta.outputs.labels }}

      - run: echo "üçè This job's status is ${{ job.status }}."
